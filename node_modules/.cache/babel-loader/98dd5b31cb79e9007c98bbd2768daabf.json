{"ast":null,"code":"import _classCallCheck from \"/Users/nitsevetedavid/Desktop/pix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nitsevetedavid/Desktop/pix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nitsevetedavid/Desktop/pix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nitsevetedavid/Desktop/pix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nitsevetedavid/Desktop/pix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nitsevetedavid/Desktop/pix/src/components/SearchBar/SearchBar.js\";\nimport \"./SearchBar.css\";\nimport React, { Component } from \"react\";\nimport SavedTerm from \"../SavedTerm/SavedTerm\";\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      savedTerms: [],\n      termsSearch: []\n    };\n\n    _this.onTermType = function (e) {\n      _this.props.onSubmit(e.target.value);\n    };\n\n    _this.addToSavedList = function () {\n      if (!_this.props.term) return;\n      var terms = JSON.parse(localStorage.TermsList);\n\n      if (!terms.includes(_this.props.term)) {\n        terms.push(_this.props.term);\n        localStorage.setItem(\"TermsList\", JSON.stringify(terms));\n\n        _this.setState({\n          savedTerms: terms\n        });\n      }\n    };\n\n    _this.handleTermsSearch = function (term) {\n      var markedWords = _this.state.termsSearch;\n      markedWords.includes(term) ? markedWords = markedWords.filter(function (word) {\n        return word !== term;\n      }) : markedWords.push(term);\n\n      _this.setState({\n        termsSearch: markedWords\n      });\n\n      _this.props.onSearch(markedWords.join(\"  \"));\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!localStorage.TermsList) localStorage.TermsList = JSON.stringify([]);else this.setState({\n        savedTerms: JSON.parse(localStorage.TermsList)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var termsList = this.state.savedTerms;\n      termsList = termsList.map(function (term) {\n        return React.createElement(SavedTerm, {\n          key: term,\n          text: term,\n          onSearch: _this2.handleTermsSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"search-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Welcome to the image search app !\")), React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-input\",\n        type: \"text\",\n        placeholder: \"type for results...\",\n        value: this.props.termValue,\n        onChange: this.onTermType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"save-btn\",\n        onClick: this.addToSavedList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Save keyword\")))), React.createElement(\"div\", {\n        className: \"saved-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"keywords-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" | saved  Keywords\"), termsList.length > 0 && React.createElement(\"div\", {\n        className: \"saved-words\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, termsList)));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/nitsevetedavid/Desktop/pix/src/components/SearchBar/SearchBar.js"],"names":["React","Component","SavedTerm","SearchBar","state","savedTerms","termsSearch","onTermType","e","props","onSubmit","target","value","addToSavedList","term","terms","JSON","parse","localStorage","TermsList","includes","push","setItem","stringify","setState","handleTermsSearch","markedWords","filter","word","onSearch","join","termsList","map","termValue","length"],"mappings":"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","sourcesContent":["import \"./SearchBar.css\";\nimport React, { Component } from \"react\";\n\nimport SavedTerm from \"../SavedTerm/SavedTerm\";\n\nclass SearchBar extends Component {\n\n  state = {\n    savedTerms: [],\n    termsSearch: []\n  };\n  \n  onTermType = e => {\n    this.props.onSubmit(e.target.value);\n  };\n\n  addToSavedList = () => { \n    if (!this.props.term) return;\n    let terms = JSON.parse(localStorage.TermsList);\n    \n    if (!terms.includes(this.props.term)) {\n      terms.push(this.props.term);\n      localStorage.setItem(\"TermsList\", JSON.stringify(terms));\n      this.setState({ savedTerms: terms });\n    }\n  };\n\n  componentDidMount() {\n    if (!localStorage.TermsList) localStorage.TermsList = JSON.stringify([]);\n    else this.setState({ savedTerms: JSON.parse(localStorage.TermsList) });\n  }\n\n  handleTermsSearch = term => {\n    let markedWords = this.state.termsSearch;\n    markedWords.includes(term)\n      ? (markedWords = markedWords.filter(word => word !== term))\n      : markedWords.push(term);\n\n    this.setState({ termsSearch: markedWords });\n    this.props.onSearch(markedWords.join(\"  \"));\n  };\n  \n  render() {\n\n    let termsList = this.state.savedTerms;\n\n    termsList = termsList.map(term => {\n      return (\n        <SavedTerm key={term} text={term} onSearch={this.handleTermsSearch} />\n      );\n    });\n\n    return (\n      <div className=\"search-container\">\n        <div className=\"search-head\">\n          <h1 className=\"search-title\">\n            Welcome to the image search app !\n          </h1>\n        </div>\n        <div className=\"search-bar\">\n          <div className=\"wrapper\">\n            <input\n              className=\"search-input\"\n              type=\"text\"\n              placeholder=\"type for results...\"\n              value={this.props.termValue}\n              onChange={this.onTermType}\n            />\n            <button className=\"save-btn\" onClick={this.addToSavedList}>\n              <span className=\"text-btn\">\n                Save keyword\n              </span>\n            </button>\n          </div>\n        </div>\n        <div className=\"saved-container\">\n          <h4 className=\"keywords-title\"> | saved  Keywords</h4>\n          {termsList.length > 0 && <div className=\"saved-words\">{termsList}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}